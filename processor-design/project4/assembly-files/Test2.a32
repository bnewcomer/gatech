; Addresses for I/O
; Addresses for I/O
.NAME	HEX= 0xffff0000
.NAME	LEDR=0xFFFF0020
.NAME	LEDG=0xFFFF0040
.NAME	KEY= 0xFFFF0100
.NAME	SW=  0xFFFF0120

	; This should never be executed
	.ORIG 0
	BEQ			Zero,Zero,AtZero
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
AtZero:
	; Turn on LEDR, display 0xBAD on HEX
	andi	Zero,Zero,0
	not		t0,Zero
	sw		t0,LEDR(Zero)
	addi	t0,Zero,0xBAD
	sw		t0,HEX(gp)
	beq		t0,t0,AtZero
	
	; Now the actual code
	.ORIG 0x60
	addi	s2,Zero,0x0BEF
	; Our Zero and FP registers will be zero
	xor		fp,fp,fp
	add     Zero,fp,fp
	; Put 1 on LEDG and turn off LEDR
	addi	s0,Zero,1
	sw		s0,LEDG(fp)
	sw		fp,LEDR(fp)
	; Put 2 on LEDG, LEDR should still be off
	addi	s0,s0,1
	sw		s0,LEDG(fp)
	addi	t0,fp,-1
	addi	t1,fp,2
	addi	a0,fp,1
	add		a1,t0,t1
	beq		a0,a1,AddWorks
AddFailed:
	; Turn on LEDR, display what's in a0
	not		t0,fp
	sw		t0,LEDR(Zero)
	sw		a0,HEX(Zero)
	beq		t0,t0,AddFailed	
AddWorks:
	; Put 3 on LEDG, LEDR should still be off
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	addi	t0,fp,7		; t0 is 7  (0x00000007)
	addi	t1,t0,3	    ; t1 is 10 (0x0000000A)
	add		a0,t1,t1    ; a0 is 20 (0x00000014)
	ori		a1,a0,0x25	; a1 is     0x00000035)
	andi	a2,a1,0xD1	; a2 is 17  0x00000011
	xor		a0,a0,a1	; a0 is 33  0x00000021
	or		a1,a0,t0	; a1 is     0x00000027
	nor		a2,t0,a2	; a2 is -2  0xFFFFFFFE
	nand	a3,a2,a1	; a3 is     0xFFFFFFD9
	sub		a1,t0,a2	; a1 is 9   0x00000009
	and		t0,a1,a2	; t0 is 8	0x00000008
	nxor	a1,a1,t0	; a1 is -2  0xFFFFFFFE
	xor		a2,a2,a3	; a3 is	    0x00000027
	sub		a0,a0,a2	; a0 is -6
	add		a0,a1,a0	; a0 is -8
	addi	t1,fp,-8
	bne		a0,t1,AluWorks
AluFailed:
	; Turn on LEDR, display what's in a0
	not		t0,Zero
	sw		t0,LEDR(Zero)
	sw		a0,HEX(Zero)
	beq		t0,t0,AluFailed	
AluWorks:
	; Put 4 on LEDG, LEDR should still be off
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	addi	a1,fp,1
	addi	t0,fp,75
	addi	t1,fp,34
	addi	a0,fp,-80
	le		a2,t0,t1
	bne		a2,fp,CmpFailed
	; Put 5 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	lt		a2,t0,t1
	bne		a2,fp,CmpFailed
	; Put 6 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	eq		a2,t0,t1
	bne		a2,fp,CmpFailed
	; Put 7 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	ne		a2,t0,t1
	bne		a2,a1,CmpFailed
	; Put 8 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	gt		a2,t0,t1
	bne		a2,a1,CmpFailed
	; Put 9 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	ge		a2,t0,t1
	bne		a2,a1,CmpFailed	
	; Put 10 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	le		a2,t1,t1
	bne		a2,a1,CmpFailed
	; Put 11 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	lt		a2,t1,t1
	bne		a2,fp,CmpFailed
	; Put 12 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	eq		a2,t1,t1
	bne		a2,a1,CmpFailed
	; Put 13 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	ne		a2,t1,t1
	bne		a2,fp,CmpFailed
	; Put 14 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	gt		a2,t1,t1
	bne		a2,fp,CmpFailed
	; Put 15 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	ge		a2,t1,t1
	bne		a2,a1,CmpFailed	
	; Put 16 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	le		a2,a0,t0
	bne		a2,a1,CmpFailed
	; Put 17 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	lt		a2,a0,t0
	bne		a2,a1,CmpFailed
	; Put 18 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	eq		a2,a0,t0
	bne		a2,fp,CmpFailed
	; Put 19 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	ne		a2,a0,t0
	bne		a2,a1,CmpFailed
	; Put 20 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	gt		a2,a0,t0
	bne		a2,fp,CmpFailed
	; Put 21 on LEDG
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	ge		a2,a0,t0
	bne		a2,fp,CmpFailed	
	beq		t0,t0,CmpWorks
CmpFailed:
	; Turn on LEDR, display what's in a2
	not		t0,Zero
	sw		t0,LEDR(Zero)
	sw		a2,HEX(Zero)
	beq		t0,t0,CmpFailed
CmpWorks:
	; Put 22 on LEDG, LEDR should still be off
	addi	s0,s0,1
	sw		s0,LEDG(Zero)
	addi	t0,fp,0x37
	addi	t1,fp,0xE1
	addi	a2,fp,1024
	sw		t0,0(a2)
	sw		t1,4(a2)
	addi	a2,a2,4
	lw		a0,0(a2)
	bne		a0,t1,MemFailed
	lw		a0,-4(a2)
	beq		a0,t0,MemWorks
MemFailed:
	; Turn on LEDR, display what's in a0
	not		t0,Zero
	sw		t0,LEDR(Zero)
	sw		a0,HEX(Zero)
	beq		t0,t0,MemFailed
MemWorks:
	; Put 23 on LEDG, LEDR should still be off
	addi	s0,s0,1
	sw		s0,LEDG(gp)
	addi	t1,fp,JalRet
	jal		t0,JalTarg(fp)
JalRet:
	beq		t0,t0,JalWorks
JalTarg:
	bne		t0,t1,JalFailed
	jal		t1,0(t0)
JalFailed:
	; Turn on LEDR, display what's in t0
	not		t0,Zero
	sw		t0,LEDR(Zero)
	sw		t0,HEX(Zero)
	beq		t0,t0,JalFailed
JalWorks:
	; Put 24 on LEDG, LEDR should still be off
	addi	s0,s0,1
	sw		s0,LEDG(gp)
WaitPress1:
	lw		t1,KEY(fp)
	sw		t1,HEX(fp)
	beq		t1,Zero,WaitPress1
WaitRelease1:
	lw		t1,KEY(fp)
	sw		t1,HEX(fp)
	bne		t1,fp,WaitRelease1
Done:
	; Turn on LEDG, put FFFF on HEX, LEDR should still be off
	not		t0,fp
	sw		t0,LEDG(fp)
	sw		t0,HEX(Zero)
	beq		t0,t0,Done
